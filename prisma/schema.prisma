// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum RideStatus {
  REQUESTED
  ACCEPTED
  INITIALIZED
  FINISHED
  CANCELED
}

model User {
  id          Int      @id @default(autoincrement())
  name        String
  email       String   @unique
  phoneNumber String   @unique
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now())
  ride        Ride[]
}

model Ride {
  id        Int        @id @default(autoincrement())
  userId    Int
  driverId  Int
  createdAt DateTime   @default(now())
  updatedAt DateTime   @default(now())
  status    RideStatus @default(REQUESTED)
  user      User       @relation(fields: [userId], references: [id])
  driver    Driver     @relation(fields: [driverId], references: [id])
}

model Driver {
  id          Int      @id @default(autoincrement())
  name        String
  email       String   @unique
  phoneNumber String   @unique
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now())
  car         Car[]
  ride        Ride[]
}

model Car {
  id       Int     @id @default(autoincrement())
  plate    String  @unique
  model    String
  brand    String
  driver   Driver? @relation(fields: [driverId], references: [id])
  driverId Int?
}
